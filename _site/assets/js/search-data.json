{"0": {
    "doc": "High Availability",
    "title": "High Availability",
    "content": "TODO : Haute dispo : Avantages / Inconvénients . ",
    "url": "http://localhost:4000/docs/WebArchitecture/HA/",
    "relUrl": "/docs/WebArchitecture/HA/"
  },"1": {
    "doc": "Web Architecture",
    "title": "Web Architecture",
    "content": " ",
    "url": "http://localhost:4000/docs/web-architecture",
    "relUrl": "/docs/web-architecture"
  },"2": {
    "doc": "DevOps",
    "title": "DevOps",
    "content": " ",
    "url": "http://localhost:4000/docs/devops",
    "relUrl": "/docs/devops"
  },"3": {
    "doc": "About",
    "title": "About",
    "content": "Je suis intégrateur et Devops à la Métropole De Lyon. Je partage ici les informations qui me sont utile dans mon quotidien sur le devops, l’architecture du web et le numérique responsable. Me contacter via LinkedIn . ",
    "url": "http://localhost:4000/about/",
    "relUrl": "/about/"
  },"4": {
    "doc": "Home",
    "title": "Accueil",
    "content": "Ce site est dédié au partage d’informations sur le DevOps, l’architecture du web ou encore le numérique responsable. DevOps View it on GitHub . ",
    "url": "http://localhost:4000/#accueil",
    "relUrl": "/#accueil"
  },"5": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"6": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Linux Debug Tools For Ops and Devops",
    "content": "Mainly specific client protocol to test specific server protocol, like curl to test an http server, ldapsearch for a ldap server or mail to test a SMTP relay etc. But you will also find many ways to set proxy settings on your tools. There are usefull tools during the deployment stages in qualification, staging, or production environment (remove them after troubleshooting). Tags: DevOps, Debug, tools, linux, ops, deploy, interface, testing . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#linux-debug-tools-for-ops-and-devops",
    "relUrl": "/docs/DevOps/linux/#linux-debug-tools-for-ops-and-devops"
  },"7": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Table of contents",
    "content": ". | Linux Debug Tools For Ops and Devops | TLDR; Install all this interfaces debug tools | TCP Client . | TCP Parameters | TCP Test with Telnet | . | FTP &amp; SFTP Client . | FTP parameters | FTP Testing | . | HTTP &amp; HTTPS Client . | HTTP Parameter | HTTP Testing with Curl | . | DNS Client . | DNS Parameters | DNS discovery | DNS Test : Ip resolution from Host | . | LDAP &amp; LDAPS Client . | LDAP Parameters | LDAP Test | . | SMTP Client . | SMTP Parameters | SMTP Test with Mail command | SMTP Testing with Telnet | . | GIT Client . | Git Parameter | Git Testing | . | Show Listened ports | PROXY HTTP : Reach a HTTP serveur Through a Proxy . | Set proxy globaly on linux | Curl behind a proxy | Git behind a proxy | Docker behind a proxy . | Docker daemon add proxy settings | Docker build behind Proxy | . | NPM (Javascript packager) behind a Proxy | PIP (Python packager) behind a Proxy | Gitlab Runner behind a proxy | Maven (Java Packaging) | . | . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#table-of-contents",
    "relUrl": "/docs/DevOps/linux/#table-of-contents"
  },"8": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "TLDR; Install all this interfaces debug tools",
    "content": "dnf install -y net-tools \\ bind-utils \\ openldap-clients \\ mailx \\ wget \\ git \\ curl \\ telnet . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#tldr-install-all-this-interfaces-debug-tools",
    "relUrl": "/docs/DevOps/linux/#tldr-install-all-this-interfaces-debug-tools"
  },"9": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "TCP Client",
    "content": " ",
    "url": "http://localhost:4000/docs/DevOps/linux/#tcp-client",
    "relUrl": "/docs/DevOps/linux/#tcp-client"
  },"10": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "TCP Parameters",
    "content": "TCP_HOST=my.domain.tld # or : \"localhost\", or ip like 192.168.0.10. TCP_PORT=80 # ex: port 22 (ssh) ou 80 (http) etc. ",
    "url": "http://localhost:4000/docs/DevOps/linux/#tcp-parameters",
    "relUrl": "/docs/DevOps/linux/#tcp-parameters"
  },"11": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "TCP Test with Telnet",
    "content": "# dnf install -y telnet # apt install -y telnet # yum install -y telnet telnet $TCP_HOST $TCP_PORT telnet my.hostname.tld 443 # example . For UDP use nc : nc -z -v -u $UDP_HOST $UDP_PORT . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#tcp-test-with-telnet",
    "relUrl": "/docs/DevOps/linux/#tcp-test-with-telnet"
  },"12": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "FTP &amp; SFTP Client",
    "content": " ",
    "url": "http://localhost:4000/docs/DevOps/linux/#ftp--sftp-client",
    "relUrl": "/docs/DevOps/linux/#ftp--sftp-client"
  },"13": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "FTP parameters",
    "content": "FTP_USER=remote_username FTP_HOST=hostname . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#ftp-parameters",
    "relUrl": "/docs/DevOps/linux/#ftp-parameters"
  },"14": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "FTP Testing",
    "content": "sftp $FTP_USER@$FTP_HOST . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#ftp-testing",
    "relUrl": "/docs/DevOps/linux/#ftp-testing"
  },"15": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "HTTP &amp; HTTPS Client",
    "content": " ",
    "url": "http://localhost:4000/docs/DevOps/linux/#http--https-client",
    "relUrl": "/docs/DevOps/linux/#http--https-client"
  },"16": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "HTTP Parameter",
    "content": "HTTP_PROTOCOL=http # default http; https if secured. HTTP_HOST=www.mydomain.com # ex: www.domain.tld HTTP_PORT=80 # default 80 not secure; 443 HTTP_ROOT_URL=$HTTP_PROTOCOL://$HTTP_HOST:$HTTP_PORT . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#http-parameter",
    "relUrl": "/docs/DevOps/linux/#http-parameter"
  },"17": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "HTTP Testing with Curl",
    "content": "# dnf install -y curl # yum install -y curl # apt install -y curl curl -v $HTTP_ROOT_URL curl -v http://httpbin.org/get # example # or if tls/ssl certifate not valid you can temporary ignore that with -k option curl -kv $HTTP_ROOT_URL curl -kv https://httpbin.org/get # example . You can also use wget to request a http server . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#http-testing-with-curl",
    "relUrl": "/docs/DevOps/linux/#http-testing-with-curl"
  },"18": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "DNS Client",
    "content": " ",
    "url": "http://localhost:4000/docs/DevOps/linux/#dns-client",
    "relUrl": "/docs/DevOps/linux/#dns-client"
  },"19": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "DNS Parameters",
    "content": "If you don’t know the following values : Ask your administrator, the SMTP manager or your integrator. DNS variables are : . DNS_DOMAIN=mydomain.com # ex: mydomain.com HOST=sub.mydomain.com # ex: mydomain.com or subdomain.mydomain.tld (=FQDN) . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#dns-parameters",
    "relUrl": "/docs/DevOps/linux/#dns-parameters"
  },"20": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "DNS discovery",
    "content": "Retrieve DNS serveur : . dnf install -y bind-utils # yum install -y bind-utils host -t ns $DNS_DOMAIN host -t ns domain.com # example # or dig ns $DNS_DOMAIN host -t ns domain.com # example . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#dns-discovery",
    "relUrl": "/docs/DevOps/linux/#dns-discovery"
  },"21": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "DNS Test : Ip resolution from Host",
    "content": "To get ip address from an host or FQDN : . # With Host command host $HOST host sub.domain.com # example # or with NSlookup nslookup $HOST nslookup sub.domain.com # example # or with Dig dig $HOST dig sub.domain.com # example dig sub.domain.com +short # example . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#dns-test--ip-resolution-from-host",
    "relUrl": "/docs/DevOps/linux/#dns-test--ip-resolution-from-host"
  },"22": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "LDAP &amp; LDAPS Client",
    "content": " ",
    "url": "http://localhost:4000/docs/DevOps/linux/#ldap--ldaps-client",
    "relUrl": "/docs/DevOps/linux/#ldap--ldaps-client"
  },"23": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "LDAP Parameters",
    "content": "If you don’t know the following values : Ask your administrator, the SMTP manager or your integrator. LDAP variables are : . LDAP_PROTOCOL=ldap # or ldaps LDAP_HOST= # ex: ldap.domain.tld LDAP_PORT=389 # default : 389 (LDAP), 636 (LDAPS) LDAP_URL=$LDAP_PROTOCOL://$LDAP_HOST:$LDAP_PORT LDAP_USERS_BASE= LDAP_BIND_FORMAT= LDAP_GROUPE_ATTRIBUT= LDAP_USERS_CONNECTION_STRING= LDAP_USER_CONNECTION_STRING= LDAP_BIND_READONLY_USER_DN= LDAP_USER_DN= LDAP_FILTER= LDAP_ATTR=* # * for \"For all attributs\", ex: givenName, sn, mail, uid . Base: \"dc=example,dc=com\", Host: \"ldap.example.com\", Port: 389, UseSSL: false, BindDN: \"uid=readonlysuer,ou=People,dc=example,dc=com\", BindPassword: \"readonlypassword\", UserFilter: \"(uid=%s)\", GroupFilter: \"(memberUid=%s)\", Attributes: []string{\"givenName\", \"sn\", \"mail\", \"uid\"}, . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#ldap-parameters",
    "relUrl": "/docs/DevOps/linux/#ldap-parameters"
  },"24": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "LDAP Test",
    "content": "# Installation ### RHEL 7 # yum install openldap-client -y ### RHEL 8 # dnf install openldap-clients -y ldapsearch -x -h $LDAP_HOST \\ -D $LDAP_BIND_READONLY_USER_DN \\ -W \\ -b $LDAP_USERS_BASE \\ -s sub \"(${LDAP_FILTER})\" $LDAP_ATTR . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#ldap-test",
    "relUrl": "/docs/DevOps/linux/#ldap-test"
  },"25": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "SMTP Client",
    "content": " ",
    "url": "http://localhost:4000/docs/DevOps/linux/#smtp-client",
    "relUrl": "/docs/DevOps/linux/#smtp-client"
  },"26": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "SMTP Parameters",
    "content": "If you don’t know the following values : Ask your administrator, the SMTP manager or your integrator. SMTP variables are : . SMTP_HOST= # default SMTP_PORT= # default port 25 not secure, and 587 for encrypted (secure)serveur # SMTP_USERNAME= # optional # SMTP_PASSWORD= # optional SMTP_SUBJECT=\"Test Subject\" SMTP_BODY=\"Test Body\" SMTP_RECIPIENT=\"recipient@domain.tld\" # Example # SMTP_FROM=\"sender@domain.tld\" # Optional . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#smtp-parameters",
    "relUrl": "/docs/DevOps/linux/#smtp-parameters"
  },"27": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "SMTP Test with Mail command",
    "content": "Test without SMTP Authentication : . Troubleshooting : mail command sometimes use /tmp folder, if you don’t have permission to write inside it, mail command could fail. dnf install -y mailx # yum install -y mailx # RHEL installation of mail command echo $SMTP_BODY | mail -S smtp=$SMTP_HOST -s $SMTP_SUBJECT $SMTP_RECIPIENT echo \"body\" | mail -S smtp=hostname -s \"suject\" \"dest@domain.org\" . or . echo $SMTP_BODY | mail -S smtp=$SMTP_HOST -s $SMTP_SUBJECT $SMTP_RECIPIENT . or . echo $SMTP_BODY | mail -S smtp=$SMTP_HOST -s $SMTP_SUBJECT -r $SMTP_FROM $SMTP_RECIPIENT . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#smtp-test-with-mail-command",
    "relUrl": "/docs/DevOps/linux/#smtp-test-with-mail-command"
  },"28": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "SMTP Testing with Telnet",
    "content": "With authentication : . # Get base64 Login perl -MMIME::Base64 -e 'print encode_base64(\"LOGIN_HERE\");' # =&gt; Z2NpcaxaaWx4ZZzzV2 # Get base64 Password perl -MMIME::Base64 -e 'print encode_base64(\"PWD_HERE\");' # =&gt; Z2NpNOTaREALexE4ZGV2 telnet $SMTP_HOST $SMTP_PORT EHLO mydomain.com AUTH LOGIN Z2NpcmVjdWx4ZGV2 Z2NpFAUSE_CHAINEcmVmdWx4ZGV2 # =&gt; \"235 2.7.0 Authentication successful\" MAIL FROM:$SMTP_FROM RCPT TO:&lt;${SMTP_RECIPIENT}&gt; NOTIFY=success,failure DATA Subject: $SMTP_SUBJECT &lt;empty line, press \"return\" command &gt; $SMTP_BODY . # Press \".\" at on the last line to send email. ",
    "url": "http://localhost:4000/docs/DevOps/linux/#smtp-testing-with-telnet",
    "relUrl": "/docs/DevOps/linux/#smtp-testing-with-telnet"
  },"29": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "GIT Client",
    "content": " ",
    "url": "http://localhost:4000/docs/DevOps/linux/#git-client",
    "relUrl": "/docs/DevOps/linux/#git-client"
  },"30": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Git Parameter",
    "content": "GIT_URL=https://git.domain.com/repository # . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#git-parameter",
    "relUrl": "/docs/DevOps/linux/#git-parameter"
  },"31": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Git Testing",
    "content": "git clone $GIT_URL . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#git-testing",
    "relUrl": "/docs/DevOps/linux/#git-testing"
  },"32": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Show Listened ports",
    "content": "dnf install -y net-tools # yum install -y net-tools netstat -planteu . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#show-listened-ports",
    "relUrl": "/docs/DevOps/linux/#show-listened-ports"
  },"33": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "PROXY HTTP : Reach a HTTP serveur Through a Proxy",
    "content": "How to set proxy which allow to reach a http serveur on another network (commonly on internet) . Proxy parameters: . PROXY_HOST=proxy.domain.com PROXY_PORT=8080 # ex: 8080, or 443, etc. # PROXY_USERNAME=__YOUR_PROXY_USERNAME__ # PROXY_PASSWORD=__YOUR_PROXY_PASSWORD__ URL=https://httpbin.org/get # Example . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#proxy-http--reach-a-http-serveur-through-a-proxy",
    "relUrl": "/docs/DevOps/linux/#proxy-http--reach-a-http-serveur-through-a-proxy"
  },"34": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Set proxy globaly on linux",
    "content": "vi /etc/profile.d/http_proxy.sh export http_proxy=$PROXY_HOST:$PROXY_PORT export https_proxy=$PROXY_HOST:$PROXY_PORT . Example : . vi /etc/profile.d/http_proxy.sh export http_proxy=proxy.domain.com:443 export https_proxy=proxy.domain.com:443 . You can check if this variables are loaded : . env | grep -i \"proxy\" . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#set-proxy-globaly-on-linux",
    "relUrl": "/docs/DevOps/linux/#set-proxy-globaly-on-linux"
  },"35": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Curl behind a proxy",
    "content": "curl -v --proxy $PROXY_HOST:$PROXY_PORT $URL # Exemple curl -kv --proxy http://myproxy.domain.tld:8080 https://httpbin.org/get . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#curl-behind-a-proxy",
    "relUrl": "/docs/DevOps/linux/#curl-behind-a-proxy"
  },"36": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Git behind a proxy",
    "content": "Globaly : . git config --global http.proxy http://$PROXY_HOST:$PROXY_HOST git config --global https.proxy http://$PROXY_HOST:$PROXY_HOST # unset # git config --global --unset http.proxy # git config --global --unset https.proxy . Specific for a repository : . git config --global http.https://domain.com.proxy http://proxyUsername:proxyPassword@proxy.server.com:port . or edit the ~/.gitconfig : . [http] [http \"https://domain.com\"] proxy = http://proxyUsername:proxyPassword@proxy.server.com:port . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#git-behind-a-proxy",
    "relUrl": "/docs/DevOps/linux/#git-behind-a-proxy"
  },"37": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Docker behind a proxy",
    "content": "Docker daemon add proxy settings . cat /etc/systemd/system/docker.service.d/http-proxy.conf [Service] Environment=\"HTTP_PROXY=http://$PROXY_HOST:$PROXY_PORT\" Environment=\"HTTPS_PROXY=http://$PROXY_HOST:$PROXY_PORT\" Environment=\"NO_PROXY=localhost,mydomain.com\" ... sudo systemctl daemon-reload sudo systemctl restart docker . Docker build behind Proxy . docker build --build-arg http_proxy=http://$PROXY_HOST:$PROXY_PORT --build-arg https_proxy=http://$PROXY_HOST:$PROXY_PORT . # Example for MAVEN inside a container # Add at top of Dockerfile : ARG MAVEN_OPTS docker build --build-arg MAVEN_OPTS=\"-Dhttp.proxyHost=$PROXY_HOST -Dhttp.proxyPort=$PROXY_PORT -Dhttps.proxyHost=$PROXY_HOST -Dhttps.proxyPort=$PROXY_PORT\" . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#docker-behind-a-proxy",
    "relUrl": "/docs/DevOps/linux/#docker-behind-a-proxy"
  },"38": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "NPM (Javascript packager) behind a Proxy",
    "content": "npm config set proxy http://$PROXY_HOST:$PROXY_PORT npm config set https-proxy http://$PROXY_HOST:$PROXY_PORT . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#npm-javascript-packager-behind-a-proxy",
    "relUrl": "/docs/DevOps/linux/#npm-javascript-packager-behind-a-proxy"
  },"39": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "PIP (Python packager) behind a Proxy",
    "content": "pip install --proxy=http://$PROXY_HOST:$PROXY_PORT -r requirements.txt . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#pip-python-packager-behind-a-proxy",
    "relUrl": "/docs/DevOps/linux/#pip-python-packager-behind-a-proxy"
  },"40": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Gitlab Runner behind a proxy",
    "content": "mkdir /etc/systemd/system/gitlab-runner.service.d vi /etc/systemd/system/gitlab-runner.service.d/http-proxy.conf [Service] Environment=\"HTTP_PROXY=http://$PROXY_HOST:$PROXY_PORT\" Environment=\"HTTPS_PROXY=http://$PROXY_HOST:$PROXY_PORT\" # save &amp; quit ESC + \":wq\" systemctl daemon-reload sudo systemctl restart gitlab-runner systemctl show --property=Environment gitlab-runner gitlab-runner stop gitlab-runner start . ",
    "url": "http://localhost:4000/docs/DevOps/linux/#gitlab-runner-behind-a-proxy",
    "relUrl": "/docs/DevOps/linux/#gitlab-runner-behind-a-proxy"
  },"41": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Maven (Java Packaging)",
    "content": "export MAVEN_OPTS=\"-Dhttp.proxyHost=$PROXY_HOST -Dhttp.proxyPort=$PROXY_PORT -Dhttps.proxyHost=$PROXY_HOST -Dhttps.proxyPort=$PROXY_PORT\" # set MAVEN_OPTS. ",
    "url": "http://localhost:4000/docs/DevOps/linux/#maven-java-packaging",
    "relUrl": "/docs/DevOps/linux/#maven-java-packaging"
  },"42": {
    "doc": "Linux shell Best Debug command line tools",
    "title": "Linux shell Best Debug command line tools",
    "content": ". ",
    "url": "http://localhost:4000/docs/DevOps/linux/",
    "relUrl": "/docs/DevOps/linux/"
  },"43": {
    "doc": "PowerShell Debug Tools for DevOps",
    "title": "PowerShell Debug Tools for Ops",
    "content": " ",
    "url": "http://localhost:4000/docs/DevOps/powershell/#powershell-debug-tools-for-ops",
    "relUrl": "/docs/DevOps/powershell/#powershell-debug-tools-for-ops"
  },"44": {
    "doc": "PowerShell Debug Tools for DevOps",
    "title": "Client TCP",
    "content": "$TCP_HOST=\"myhostname.domain.com\" # or : \"localhost\", or ip like 192.168.0.10. $TCP_PORT=443 Test-NetConnection -ComputerName $TCP_HOST -Port $TCP_PORT -InformationLevel \"Detailed\" . ",
    "url": "http://localhost:4000/docs/DevOps/powershell/#client-tcp",
    "relUrl": "/docs/DevOps/powershell/#client-tcp"
  },"45": {
    "doc": "PowerShell Debug Tools for DevOps",
    "title": "FTP and SFTP Client",
    "content": "$FTP_USER=remote_username $FTP_HOST=hostname Install-Module -Name Posh-SSH $SFTPSession = New-SFTPSession -ComputerName $FTP_HOST -Credential (Get-Credential) Get-SFTPItem -SessionId $SFTPSession.SessionId -Path /home/myuser/myfile.txt -Destination c:\\myfolder . See also WinSCP Module. ",
    "url": "http://localhost:4000/docs/DevOps/powershell/#ftp-and-sftp-client",
    "relUrl": "/docs/DevOps/powershell/#ftp-and-sftp-client"
  },"46": {
    "doc": "PowerShell Debug Tools for DevOps",
    "title": "HTTP &amp; HTTPS Client",
    "content": "$HTTP_PROTOCOL=\"https\" # default http; https if secured. $HTTP_HOST=\"www.mydomain.com\" # ex: www.domain.tld $HTTP_PORT=\"443\" # default 80 not secure; 443 $HTTP_PATH=\"/\" # / or path/to/ressource $HTTP_URI=${HTTP_PROTOCOL}://${HTTP_HOST}:${HTTP_PORT}${HTTP_PATH} [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 $webcall = Invoke-WebRequest -Uri $HTTP_URI -UseBasicParsing Write-Host ($webcall | Format-Table | Out-String) . ",
    "url": "http://localhost:4000/docs/DevOps/powershell/#http--https-client",
    "relUrl": "/docs/DevOps/powershell/#http--https-client"
  },"47": {
    "doc": "PowerShell Debug Tools for DevOps",
    "title": "LDAP &amp; LDAPS Client",
    "content": "If you want a GUI LDAP client, get the free LDAP Browser 4.5 (not the paid administrator version). $LDAP_PROTOCOL=\"ldap\" # or ldaps $LDAP_HOST= # ex: ldap.domain.tld $LDAP_PORT=\"389\" # default : 389 (LDAP), 636 (LDAPS) $LDAP_URL=$LDAP_PROTOCOL://$LDAP_HOST:$LDAP_PORT $LDAP_USERS_BASE= $LDAP_BIND_FORMAT= $LDAP_GROUPE_ATTRIBUT= $LDAP_USERS_CONNECTION_STRING= $LDAP_USER_CONNECTION_STRING= $LDAP_BIND_READONLY_USER_DN= $LDAP_USER_DN= $LDAP_FILTER= $LDAP_ATTR=\"*\" # * for \"For all attributs\", ex: givenName, sn, mail, uid . Check user exist : . [adsi]\"$LDAP_USER_CONNECTION_STRING\" . Check AD auth : . Function Test-ADUserAuthentication { param( [parameter(Mandatory=$true)] [string]$ADUserLogin, [parameter(Mandatory=$true)] [string]$ADUserPassword) ((New-Object DirectoryServices.DirectoryEntry -ArgumentList \"\",$ADUserLogin,$ADUserPassword).psbase.name) -ne $null } $ADUserLogin = \"account\" $ADUserPassword = \"pass\" Test-ADUserAuthentication -ADUserLogin $ADUserLogin -ADUserPassword $ADUserPassword . Check Member of a group : . Import-Module ActiveDirectory Get-ADGroupMember $GROUP_NAME | select name,distinguishedname . ",
    "url": "http://localhost:4000/docs/DevOps/powershell/#ldap--ldaps-client",
    "relUrl": "/docs/DevOps/powershell/#ldap--ldaps-client"
  },"48": {
    "doc": "PowerShell Debug Tools for DevOps",
    "title": "SMTP Client",
    "content": "$SMTP_HOST=\"smtp.domain.com\" # default $SMTP_PORT=\"25\" # default port 25 not secure, and 587 for encrypted (secure)serveur # $SMTP_USERNAME= # optional # $SMTP_PASSWORD= # optional $SMTP_SUBJECT=\"Test Subject\" $SMTP_BODY=\"Test Body\" $SMTP_RECIPIENT=\"recipient@domain.com\" # Example # $SMTP_FROM=\"sender@domain.com\" # Optional, don't add this if your server are not trusted by the recipient smtp server. Send-MailMessage -SmtpServer $SMTP_HOST -Port $SMTP_PORT -To $SMTP_RECIPIENT -Subject $SMTP_SUBJECT -Body $SMTP_BODY . ",
    "url": "http://localhost:4000/docs/DevOps/powershell/#smtp-client",
    "relUrl": "/docs/DevOps/powershell/#smtp-client"
  },"49": {
    "doc": "PowerShell Debug Tools for DevOps",
    "title": "Show Listened ports",
    "content": "Get-NetTCPConnection -State Listen,Established . ",
    "url": "http://localhost:4000/docs/DevOps/powershell/#show-listened-ports",
    "relUrl": "/docs/DevOps/powershell/#show-listened-ports"
  },"50": {
    "doc": "PowerShell Debug Tools for DevOps",
    "title": "PowerShell Debug Tools for DevOps",
    "content": ". ",
    "url": "http://localhost:4000/docs/DevOps/powershell/",
    "relUrl": "/docs/DevOps/powershell/"
  },"51": {
    "doc": "Windows Best Debug Tools",
    "title": "Windows Best Debug Tools",
    "content": "This is my Top Windows App for Debuging and Troubleshooting interfaces and connections issues. This “Awesome list” of software is dedicated to Integration Testing, Deploy Testing, DevOps, Troubleshooting and Debug on Windows. On RUN step, or on Production environment : It’s best to use portable version so you can easily remove them after troubleshooting, for security purpose. ",
    "url": "http://localhost:4000/docs/DevOps/windows/#windows-best-debug-tools",
    "relUrl": "/docs/DevOps/windows/#windows-best-debug-tools"
  },"52": {
    "doc": "Windows Best Debug Tools",
    "title": "Table of contents",
    "content": ". | Windows Best Debug Tools | FTP &amp; SFTP Client | JDBC / SQL Client | HTTP(s) Client | SSH Client | RDP Client | LDAP &amp; LDAPS Client | Text Editor | IDE | Debug Tools | Linux Commands | DNS | ClearType | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#table-of-contents",
    "relUrl": "/docs/DevOps/windows/#table-of-contents"
  },"53": {
    "doc": "Windows Best Debug Tools",
    "title": "FTP &amp; SFTP Client",
    "content": ". | WinSCP | FileZilla | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#ftp--sftp-client",
    "relUrl": "/docs/DevOps/windows/#ftp--sftp-client"
  },"54": {
    "doc": "Windows Best Debug Tools",
    "title": "JDBC / SQL Client",
    "content": ". | dbeaver | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#jdbc--sql-client",
    "relUrl": "/docs/DevOps/windows/#jdbc--sql-client"
  },"55": {
    "doc": "Windows Best Debug Tools",
    "title": "HTTP(s) Client",
    "content": ". | Firefox | Chrome | Command Line Tool : curl | Postman | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#https-client",
    "relUrl": "/docs/DevOps/windows/#https-client"
  },"56": {
    "doc": "Windows Best Debug Tools",
    "title": "SSH Client",
    "content": ". | Putty | mRemoteNG | Tabby : Cmd + Powershell + SSh + Git Bash | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#ssh-client",
    "relUrl": "/docs/DevOps/windows/#ssh-client"
  },"57": {
    "doc": "Windows Best Debug Tools",
    "title": "RDP Client",
    "content": ". | mRemoteNG | MobaXterm | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#rdp-client",
    "relUrl": "/docs/DevOps/windows/#rdp-client"
  },"58": {
    "doc": "Windows Best Debug Tools",
    "title": "LDAP &amp; LDAPS Client",
    "content": ". | LDAP Browser : Get the free community version | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#ldap--ldaps-client",
    "relUrl": "/docs/DevOps/windows/#ldap--ldaps-client"
  },"59": {
    "doc": "Windows Best Debug Tools",
    "title": "Text Editor",
    "content": ". | Notepad++ | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#text-editor",
    "relUrl": "/docs/DevOps/windows/#text-editor"
  },"60": {
    "doc": "Windows Best Debug Tools",
    "title": "IDE",
    "content": ". | Visual Studio Code | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#ide",
    "relUrl": "/docs/DevOps/windows/#ide"
  },"61": {
    "doc": "Windows Best Debug Tools",
    "title": "Debug Tools",
    "content": ". | PowerToys | BGInfo | OpenSSH | Open SSL | SumatraPDF | TcpView | PSTools | TreeSize | ScreenToGIF Windows | Lock Hunter Déverrouiller un fichier lock par un processus (non portable) | WinMerge | AutoRun : Voir exhaustivement les applications lancée au démarrage Windows | GreenshotPortable | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#debug-tools",
    "relUrl": "/docs/DevOps/windows/#debug-tools"
  },"62": {
    "doc": "Windows Best Debug Tools",
    "title": "Linux Commands",
    "content": ". | Bash on Windows WSL 2 | Unix Utils Commands for Windows | Git Bash | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#linux-commands",
    "relUrl": "/docs/DevOps/windows/#linux-commands"
  },"63": {
    "doc": "Windows Best Debug Tools",
    "title": "DNS",
    "content": "Flush dns : . ipconfig /flushdns . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#dns",
    "relUrl": "/docs/DevOps/windows/#dns"
  },"64": {
    "doc": "Windows Best Debug Tools",
    "title": "ClearType",
    "content": "To stop Aliasing : . | get cleartype.ps1 file and run it : | . cleartype.ps1 1 . Then add new scheduled task on session startup . | Open Task Scheduler | Create a new task | Action : . | command: powershell | parameter : E:\\isi\\cleartype.ps1 1 | . | . ",
    "url": "http://localhost:4000/docs/DevOps/windows/#cleartype",
    "relUrl": "/docs/DevOps/windows/#cleartype"
  },"65": {
    "doc": "Windows Best Debug Tools",
    "title": "Windows Best Debug Tools",
    "content": ". ",
    "url": "http://localhost:4000/docs/DevOps/windows/",
    "relUrl": "/docs/DevOps/windows/"
  }
}
